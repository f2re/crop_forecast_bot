from src.bot.keyboards import create_main_keyboard
from src.storage.coordinates import save_coordinates, load_coordinates
from geopy.geocoders import Nominatim
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from src.api.era5_ag import get_climate_data
from src.bot.plotting import plot_climate_data
from datetime import datetime, timedelta

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–æ–∫–æ–¥–µ—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞
geolocator = Nominatim(user_agent="crop_recommendation_bot")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
def get_address(latitude, longitude):
    """–ü–æ–ª—É—á–∞–µ—Ç –∞–¥—Ä–µ—Å –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º —Å –ø–æ–º–æ—â—å—é –≥–µ–æ–∫–æ–¥–µ—Ä–∞ Nominatim."""
    try:
        location = geolocator.reverse((latitude, longitude), language='ru')
        if location:
            return location.address
        return "–ê–¥—Ä–µ—Å –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å."
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–¥—Ä–µ—Å–∞: {e}")
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å –∏–∑-–∑–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏."

def register_handlers(bot):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –±–æ—Ç–∞."""
    
    @bot.message_handler(commands=['start'])
    def send_welcome(message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –µ—Å–ª–∏ –µ—Å—Ç—å."""
        user_name = message.from_user.first_name
        user_id = message.from_user.id
        welcome_text = (
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_name}! üëã\n"
            "–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –∫—É–ª—å—Ç—É—Ä—ã –¥–ª—è –ø–æ—Å–µ–≤–∞. "
            "–î–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, —á—Ç–æ–±—ã —è –º–æ–≥ —É–∑–Ω–∞—Ç—å –æ –∫–ª–∏–º–∞—Ç–µ –≤ –≤–∞—à–µ–º —Ä–∞–π–æ–Ω–µ. üåæ\n"
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        saved_coords = load_coordinates(user_id)
        if saved_coords:
            latitude = saved_coords['latitude']
            longitude = saved_coords['longitude']
            welcome_text += (
                f"–£ –º–µ–Ω—è —É–∂–µ –µ—Å—Ç—å –≤–∞—à–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: —à–∏—Ä–æ—Ç–∞ {latitude}, –¥–æ–ª–≥–æ—Ç–∞ {longitude}. üåç\n"
                "–Ø –ø–æ–∫–∞–∂—É –∏—Ö –Ω–∞ –∫–∞—Ä—Ç–µ –Ω–∏–∂–µ. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—É—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é.\n"
            )
            bot.send_message(message.chat.id, welcome_text, reply_markup=create_main_keyboard(user_id))
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç—É —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
            bot.send_location(message.chat.id, latitude, longitude)
            
            # –ü–æ–ª—É—á–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥—Ä–µ—Å
            address = get_address(latitude, longitude)
            address_text = f"–ü—Ä–∏–º–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å: {address} üè°"
            bot.send_message(message.chat.id, address_text, reply_markup=create_main_keyboard(user_id))
        else:
            welcome_text += "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π."
            bot.send_message(message.chat.id, welcome_text, reply_markup=create_main_keyboard(user_id))
    
    @bot.message_handler(content_types=['location'])
    def handle_location(message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏. –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Ö –Ω–∞ –∫–∞—Ä—Ç–µ —Å –∞–¥—Ä–µ—Å–æ–º."""
        user_id = message.from_user.id
        latitude = message.location.latitude
        longitude = message.location.longitude
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
        save_coordinates(user_id, latitude, longitude)
        
        response_text = (
            f"–°–ø–∞—Å–∏–±–æ! –Ø —Å–æ—Ö—Ä–∞–Ω–∏–ª –≤–∞—à–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: —à–∏—Ä–æ—Ç–∞ {latitude}, –¥–æ–ª–≥–æ—Ç–∞ {longitude}. üåç\n"
            "–í–æ—Ç –æ–Ω–∏ –Ω–∞ –∫–∞—Ä—Ç–µ. –°–∫–æ—Ä–æ —è –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ –¥–∞–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫—É–ª—å—Ç—É—Ä–∞–º. üå±"
        )
        bot.send_message(message.chat.id, response_text, reply_markup=create_main_keyboard(user_id))
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç—É —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
        bot.send_location(message.chat.id, latitude, longitude)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥—Ä–µ—Å
        address = get_address(latitude, longitude)
        address_text = f"–ü—Ä–∏–º–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å: {address} üè°"
        bot.send_message(message.chat.id, address_text, reply_markup=create_main_keyboard(user_id))
    
    @bot.message_handler(func=lambda message: message.text == "–ü–æ–º–æ—â—å ‚ÑπÔ∏è")
    def send_help(message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ø–æ–º–æ—â–∏. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞."""
        user_id = message.from_user.id
        help_text = (
            "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –∫—É–ª—å—Ç—É—Ä—ã –¥–ª—è –ø–æ—Å–µ–≤–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª–∏–º–∞—Ç–∞ –≤ –≤–∞—à–µ–º —Ä–∞–π–æ–Ω–µ. üåæ\n"
            "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é üåç'.\n"
            "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏—Ç–µ –º–Ω–µ!"
        )
        bot.send_message(message.chat.id, help_text, reply_markup=create_main_keyboard(user_id))

    @bot.message_handler(func=lambda message: message.text == "–ö–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ üìä")
    def handle_climate_data(message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ö–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ üìä'. –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–∏–æ–¥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞."""
        user_id = message.from_user.id
        if not load_coordinates(user_id):
            bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.", reply_markup=create_main_keyboard(user_id))
            return

        keyboard = InlineKeyboardMarkup(row_width=1)
        keyboard.add(
            InlineKeyboardButton("–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü", callback_data="climate_last_month"),
            InlineKeyboardButton("–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥", callback_data="climate_last_year"),
            InlineKeyboardButton("–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ª–µ—Ç", callback_data="climate_5_years")
        )
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö:", reply_markup=keyboard)

    @bot.callback_query_handler(func=lambda call: call.data.startswith('climate_'))
    def handle_climate_callback(call):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è inline-–∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö.
        –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, —Å—Ç—Ä–æ–∏—Ç –≥—Ä–∞—Ñ–∏–∫ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
        """
        user_id = call.from_user.id
        coords = load_coordinates(user_id)

        if not coords:
            bot.answer_callback_query(call.id, "–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏—Ö —Å–Ω–æ–≤–∞.")
            return

        bot.answer_callback_query(call.id, "–ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç! –ó–∞–≥—Ä—É–∂–∞—é –¥–∞–Ω–Ω—ã–µ... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è. ‚è≥")
        bot.edit_message_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, —è –≥–æ—Ç–æ–≤–ª—é –≤–∞—à –≥—Ä–∞—Ñ–∏–∫... ‚è≥", call.message.chat.id, call.message.message_id)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–∏–æ–¥
        today = datetime.now()
        if call.data == 'climate_last_month':
            start_date = (today - timedelta(days=30)).strftime('%Y-%m-%d')
            end_date = today.strftime('%Y-%m-%d')
        elif call.data == 'climate_last_year':
            start_date = (today - timedelta(days=365)).strftime('%Y-%m-%d')
            end_date = today.strftime('%Y-%m-%d')
        elif call.data == 'climate_5_years':
            start_date = (today - timedelta(days=5*365)).strftime('%Y-%m-%d')
            end_date = today.strftime('%Y-%m-%d')
        else:
            return

        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –¥–∞–Ω–Ω—ã–º–∏
            netcdf_file = get_climate_data(coords['latitude'], coords['longitude'], start_date, end_date)

            if netcdf_file:
                bot.edit_message_text("–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –°–æ–∑–¥–∞—é –≥—Ä–∞—Ñ–∏–∫... üé®", call.message.chat.id, call.message.message_id)
                # –°—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫ –∏–∑ —Ñ–∞–π–ª–∞
                plot_image = plot_climate_data(netcdf_file)

                if plot_image:
                    bot.delete_message(call.message.chat.id, call.message.message_id)
                    bot.send_photo(call.message.chat.id, plot_image, caption=f"–ö–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø–µ—Ä–∏–æ–¥ —Å {start_date} –ø–æ {end_date}")
                else:
                    bot.edit_message_text("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ.", call.message.chat.id, call.message.message_id)
            else:
                bot.edit_message_text("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", call.message.chat.id, call.message.message_id)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ handle_climate_callback: {e}")
            bot.edit_message_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.", call.message.chat.id, call.message.message_id)
